//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace BMWFSIndexingProxy.cs {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BMWFSIndexingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BMWFSIndexingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestWebServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDynamicConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDescriptionCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentImageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExtractParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceTypeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentPathDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScanFolderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemIniDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCoverPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceDescriptionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback IntroduceDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExecutableFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstallationLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHttpInstallLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHttpInstallFileOperationCompleted;
        
        /// <remarks/>
        public BMWFSIndexingService() {
            this.Url = "http://zamffs07/bmwfsindexer/BMWFSIndexingService.asmx";
        }
        
        /// <remarks/>
        public event TestWebServiceCompletedEventHandler TestWebServiceCompleted;
        
        /// <remarks/>
        public event GetDocumentTypesCompletedEventHandler GetDocumentTypesCompleted;
        
        /// <remarks/>
        public event GetDocumentDynamicConditionsCompletedEventHandler GetDocumentDynamicConditionsCompleted;
        
        /// <remarks/>
        public event GetDocumentDescriptionCodesCompletedEventHandler GetDocumentDescriptionCodesCompleted;
        
        /// <remarks/>
        public event GetDefaultValuesCompletedEventHandler GetDefaultValuesCompleted;
        
        /// <remarks/>
        public event GetDocumentImageFolderCompletedEventHandler GetDocumentImageFolderCompleted;
        
        /// <remarks/>
        public event GetReferenceStructureCompletedEventHandler GetReferenceStructureCompleted;
        
        /// <remarks/>
        public event GetExtractParametersCompletedEventHandler GetExtractParametersCompleted;
        
        /// <remarks/>
        public event GetReferencesCompletedEventHandler GetReferencesCompleted;
        
        /// <remarks/>
        public event GetDocumentsCompletedEventHandler GetDocumentsCompleted;
        
        /// <remarks/>
        public event GetNextNumCompletedEventHandler GetNextNumCompleted;
        
        /// <remarks/>
        public event GetReferenceTypeCompletedEventHandler GetReferenceTypeCompleted;
        
        /// <remarks/>
        public event ValidateReferenceCompletedEventHandler ValidateReferenceCompleted;
        
        /// <remarks/>
        public event GetReferenceTypeDetailsCompletedEventHandler GetReferenceTypeDetailsCompleted;
        
        /// <remarks/>
        public event GetDocumentPathDetailsCompletedEventHandler GetDocumentPathDetailsCompleted;
        
        /// <remarks/>
        public event GetScanFolderIDCompletedEventHandler GetScanFolderIDCompleted;
        
        /// <remarks/>
        public event GetApplicationVersionCompletedEventHandler GetApplicationVersionCompleted;
        
        /// <remarks/>
        public event GetSystemIniDetailsCompletedEventHandler GetSystemIniDetailsCompleted;
        
        /// <remarks/>
        public event GetAccessDetailCompletedEventHandler GetAccessDetailCompleted;
        
        /// <remarks/>
        public event SearchCoverPageCompletedEventHandler SearchCoverPageCompleted;
        
        /// <remarks/>
        public event GetReferenceDescriptionDetailsCompletedEventHandler GetReferenceDescriptionDetailsCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event UpdateDocumentPoolCompletedEventHandler UpdateDocumentPoolCompleted;
        
        /// <remarks/>
        public event IntroduceDocumentCompletedEventHandler IntroduceDocumentCompleted;
        
        /// <remarks/>
        public event MoveDocumentCompletedEventHandler MoveDocumentCompleted;
        
        /// <remarks/>
        public event GetUserNameCompletedEventHandler GetUserNameCompleted;
        
        /// <remarks/>
        public event GetPasswordCompletedEventHandler GetPasswordCompleted;
        
        /// <remarks/>
        public event GetExecutableFileNameCompletedEventHandler GetExecutableFileNameCompleted;
        
        /// <remarks/>
        public event GetInstallationLocationCompletedEventHandler GetInstallationLocationCompleted;
        
        /// <remarks/>
        public event GetHttpInstallLocationCompletedEventHandler GetHttpInstallLocationCompleted;
        
        /// <remarks/>
        public event GetHttpInstallFileCompletedEventHandler GetHttpInstallFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestWebService() {
            object[] results = this.Invoke("TestWebService", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestWebService(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestWebService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTestWebService(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestWebServiceAsync() {
            this.TestWebServiceAsync(null);
        }
        
        /// <remarks/>
        public void TestWebServiceAsync(object userState) {
            if ((this.TestWebServiceOperationCompleted == null)) {
                this.TestWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestWebServiceOperationCompleted);
            }
            this.InvokeAsync("TestWebService", new object[0], this.TestWebServiceOperationCompleted, userState);
        }
        
        private void OnTestWebServiceOperationCompleted(object arg) {
            if ((this.TestWebServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestWebServiceCompleted(this, new TestWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentTypes() {
            object[] results = this.Invoke("GetDocumentTypes", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocumentTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypesAsync() {
            this.GetDocumentTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentTypesAsync(object userState) {
            if ((this.GetDocumentTypesOperationCompleted == null)) {
                this.GetDocumentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypes", new object[0], this.GetDocumentTypesOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypesOperationCompleted(object arg) {
            if ((this.GetDocumentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypesCompleted(this, new GetDocumentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentDynamicConditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentDynamicConditions(string referenceNo, string ReferenceType) {
            object[] results = this.Invoke("GetDocumentDynamicConditions", new object[] {
                        referenceNo,
                        ReferenceType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentDynamicConditions(string referenceNo, string ReferenceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentDynamicConditions", new object[] {
                        referenceNo,
                        ReferenceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocumentDynamicConditions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDynamicConditionsAsync(string referenceNo, string ReferenceType) {
            this.GetDocumentDynamicConditionsAsync(referenceNo, ReferenceType, null);
        }
        
        /// <remarks/>
        public void GetDocumentDynamicConditionsAsync(string referenceNo, string ReferenceType, object userState) {
            if ((this.GetDocumentDynamicConditionsOperationCompleted == null)) {
                this.GetDocumentDynamicConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDynamicConditionsOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDynamicConditions", new object[] {
                        referenceNo,
                        ReferenceType}, this.GetDocumentDynamicConditionsOperationCompleted, userState);
        }
        
        private void OnGetDocumentDynamicConditionsOperationCompleted(object arg) {
            if ((this.GetDocumentDynamicConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDynamicConditionsCompleted(this, new GetDocumentDynamicConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentDescriptionCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentDescriptionCodes() {
            object[] results = this.Invoke("GetDocumentDescriptionCodes", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentDescriptionCodes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentDescriptionCodes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocumentDescriptionCodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDescriptionCodesAsync() {
            this.GetDocumentDescriptionCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentDescriptionCodesAsync(object userState) {
            if ((this.GetDocumentDescriptionCodesOperationCompleted == null)) {
                this.GetDocumentDescriptionCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDescriptionCodesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDescriptionCodes", new object[0], this.GetDocumentDescriptionCodesOperationCompleted, userState);
        }
        
        private void OnGetDocumentDescriptionCodesOperationCompleted(object arg) {
            if ((this.GetDocumentDescriptionCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDescriptionCodesCompleted(this, new GetDocumentDescriptionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefaultValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDefaultValues() {
            object[] results = this.Invoke("GetDefaultValues", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValues(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValues", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDefaultValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultValuesAsync() {
            this.GetDefaultValuesAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultValuesAsync(object userState) {
            if ((this.GetDefaultValuesOperationCompleted == null)) {
                this.GetDefaultValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultValuesOperationCompleted);
            }
            this.InvokeAsync("GetDefaultValues", new object[0], this.GetDefaultValuesOperationCompleted, userState);
        }
        
        private void OnGetDefaultValuesOperationCompleted(object arg) {
            if ((this.GetDefaultValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultValuesCompleted(this, new GetDefaultValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentImageFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentImageFolder() {
            object[] results = this.Invoke("GetDocumentImageFolder", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentImageFolder(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentImageFolder", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocumentImageFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentImageFolderAsync() {
            this.GetDocumentImageFolderAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentImageFolderAsync(object userState) {
            if ((this.GetDocumentImageFolderOperationCompleted == null)) {
                this.GetDocumentImageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentImageFolderOperationCompleted);
            }
            this.InvokeAsync("GetDocumentImageFolder", new object[0], this.GetDocumentImageFolderOperationCompleted, userState);
        }
        
        private void OnGetDocumentImageFolderOperationCompleted(object arg) {
            if ((this.GetDocumentImageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentImageFolderCompleted(this, new GetDocumentImageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReferenceStructure(int securityLevel, int ReferenceType, char admin_User) {
            object[] results = this.Invoke("GetReferenceStructure", new object[] {
                        securityLevel,
                        ReferenceType,
                        admin_User});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferenceStructure(int securityLevel, int ReferenceType, char admin_User, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferenceStructure", new object[] {
                        securityLevel,
                        ReferenceType,
                        admin_User}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReferenceStructure(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceStructureAsync(int securityLevel, int ReferenceType, char admin_User) {
            this.GetReferenceStructureAsync(securityLevel, ReferenceType, admin_User, null);
        }
        
        /// <remarks/>
        public void GetReferenceStructureAsync(int securityLevel, int ReferenceType, char admin_User, object userState) {
            if ((this.GetReferenceStructureOperationCompleted == null)) {
                this.GetReferenceStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceStructureOperationCompleted);
            }
            this.InvokeAsync("GetReferenceStructure", new object[] {
                        securityLevel,
                        ReferenceType,
                        admin_User}, this.GetReferenceStructureOperationCompleted, userState);
        }
        
        private void OnGetReferenceStructureOperationCompleted(object arg) {
            if ((this.GetReferenceStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceStructureCompleted(this, new GetReferenceStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExtractParameters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetExtractParameters(int referenceType) {
            object[] results = this.Invoke("GetExtractParameters", new object[] {
                        referenceType});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExtractParameters(int referenceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExtractParameters", new object[] {
                        referenceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetExtractParameters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExtractParametersAsync(int referenceType) {
            this.GetExtractParametersAsync(referenceType, null);
        }
        
        /// <remarks/>
        public void GetExtractParametersAsync(int referenceType, object userState) {
            if ((this.GetExtractParametersOperationCompleted == null)) {
                this.GetExtractParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExtractParametersOperationCompleted);
            }
            this.InvokeAsync("GetExtractParameters", new object[] {
                        referenceType}, this.GetExtractParametersOperationCompleted, userState);
        }
        
        private void OnGetExtractParametersOperationCompleted(object arg) {
            if ((this.GetExtractParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExtractParametersCompleted(this, new GetExtractParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferences", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReferences(string searchString, int ReferenceType, int parameterNumber) {
            object[] results = this.Invoke("GetReferences", new object[] {
                        searchString,
                        ReferenceType,
                        parameterNumber});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferences(string searchString, int ReferenceType, int parameterNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferences", new object[] {
                        searchString,
                        ReferenceType,
                        parameterNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReferences(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string searchString, int ReferenceType, int parameterNumber) {
            this.GetReferencesAsync(searchString, ReferenceType, parameterNumber, null);
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string searchString, int ReferenceType, int parameterNumber, object userState) {
            if ((this.GetReferencesOperationCompleted == null)) {
                this.GetReferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesOperationCompleted);
            }
            this.InvokeAsync("GetReferences", new object[] {
                        searchString,
                        ReferenceType,
                        parameterNumber}, this.GetReferencesOperationCompleted, userState);
        }
        
        private void OnGetReferencesOperationCompleted(object arg) {
            if ((this.GetReferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesCompleted(this, new GetReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocuments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocuments(string referenceNumber, int ReferenceType, char getDeleted) {
            object[] results = this.Invoke("GetDocuments", new object[] {
                        referenceNumber,
                        ReferenceType,
                        getDeleted});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocuments(string referenceNumber, int ReferenceType, char getDeleted, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocuments", new object[] {
                        referenceNumber,
                        ReferenceType,
                        getDeleted}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocuments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(string referenceNumber, int ReferenceType, char getDeleted) {
            this.GetDocumentsAsync(referenceNumber, ReferenceType, getDeleted, null);
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(string referenceNumber, int ReferenceType, char getDeleted, object userState) {
            if ((this.GetDocumentsOperationCompleted == null)) {
                this.GetDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetDocuments", new object[] {
                        referenceNumber,
                        ReferenceType,
                        getDeleted}, this.GetDocumentsOperationCompleted, userState);
        }
        
        private void OnGetDocumentsOperationCompleted(object arg) {
            if ((this.GetDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsCompleted(this, new GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetNextNum(string NumberType, string userID, string workstation, char selectOut) {
            object[] results = this.Invoke("GetNextNum", new object[] {
                        NumberType,
                        userID,
                        workstation,
                        selectOut});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextNum(string NumberType, string userID, string workstation, char selectOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextNum", new object[] {
                        NumberType,
                        userID,
                        workstation,
                        selectOut}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetNextNum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextNumAsync(string NumberType, string userID, string workstation, char selectOut) {
            this.GetNextNumAsync(NumberType, userID, workstation, selectOut, null);
        }
        
        /// <remarks/>
        public void GetNextNumAsync(string NumberType, string userID, string workstation, char selectOut, object userState) {
            if ((this.GetNextNumOperationCompleted == null)) {
                this.GetNextNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextNumOperationCompleted);
            }
            this.InvokeAsync("GetNextNum", new object[] {
                        NumberType,
                        userID,
                        workstation,
                        selectOut}, this.GetNextNumOperationCompleted, userState);
        }
        
        private void OnGetNextNumOperationCompleted(object arg) {
            if ((this.GetNextNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextNumCompleted(this, new GetNextNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReferenceType() {
            object[] results = this.Invoke("GetReferenceType", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferenceType(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferenceType", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReferenceType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceTypeAsync() {
            this.GetReferenceTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetReferenceTypeAsync(object userState) {
            if ((this.GetReferenceTypeOperationCompleted == null)) {
                this.GetReferenceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceTypeOperationCompleted);
            }
            this.InvokeAsync("GetReferenceType", new object[0], this.GetReferenceTypeOperationCompleted, userState);
        }
        
        private void OnGetReferenceTypeOperationCompleted(object arg) {
            if ((this.GetReferenceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceTypeCompleted(this, new GetReferenceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateReference", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateReference(string referenceNo, string referenceType) {
            object[] results = this.Invoke("ValidateReference", new object[] {
                        referenceNo,
                        referenceType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateReference(string referenceNo, string referenceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateReference", new object[] {
                        referenceNo,
                        referenceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidateReference(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateReferenceAsync(string referenceNo, string referenceType) {
            this.ValidateReferenceAsync(referenceNo, referenceType, null);
        }
        
        /// <remarks/>
        public void ValidateReferenceAsync(string referenceNo, string referenceType, object userState) {
            if ((this.ValidateReferenceOperationCompleted == null)) {
                this.ValidateReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateReferenceOperationCompleted);
            }
            this.InvokeAsync("ValidateReference", new object[] {
                        referenceNo,
                        referenceType}, this.ValidateReferenceOperationCompleted, userState);
        }
        
        private void OnValidateReferenceOperationCompleted(object arg) {
            if ((this.ValidateReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateReferenceCompleted(this, new ValidateReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceTypeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReferenceTypeDetails() {
            object[] results = this.Invoke("GetReferenceTypeDetails", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferenceTypeDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferenceTypeDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReferenceTypeDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceTypeDetailsAsync() {
            this.GetReferenceTypeDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetReferenceTypeDetailsAsync(object userState) {
            if ((this.GetReferenceTypeDetailsOperationCompleted == null)) {
                this.GetReferenceTypeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceTypeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReferenceTypeDetails", new object[0], this.GetReferenceTypeDetailsOperationCompleted, userState);
        }
        
        private void OnGetReferenceTypeDetailsOperationCompleted(object arg) {
            if ((this.GetReferenceTypeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceTypeDetailsCompleted(this, new GetReferenceTypeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentPathDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDocumentPathDetails() {
            object[] results = this.Invoke("GetDocumentPathDetails", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentPathDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentPathDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetDocumentPathDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentPathDetailsAsync() {
            this.GetDocumentPathDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentPathDetailsAsync(object userState) {
            if ((this.GetDocumentPathDetailsOperationCompleted == null)) {
                this.GetDocumentPathDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentPathDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDocumentPathDetails", new object[0], this.GetDocumentPathDetailsOperationCompleted, userState);
        }
        
        private void OnGetDocumentPathDetailsOperationCompleted(object arg) {
            if ((this.GetDocumentPathDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentPathDetailsCompleted(this, new GetDocumentPathDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScanFolderID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetScanFolderID() {
            object[] results = this.Invoke("GetScanFolderID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetScanFolderID(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetScanFolderID", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetScanFolderID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetScanFolderIDAsync() {
            this.GetScanFolderIDAsync(null);
        }
        
        /// <remarks/>
        public void GetScanFolderIDAsync(object userState) {
            if ((this.GetScanFolderIDOperationCompleted == null)) {
                this.GetScanFolderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScanFolderIDOperationCompleted);
            }
            this.InvokeAsync("GetScanFolderID", new object[0], this.GetScanFolderIDOperationCompleted, userState);
        }
        
        private void OnGetScanFolderIDOperationCompleted(object arg) {
            if ((this.GetScanFolderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScanFolderIDCompleted(this, new GetScanFolderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationVersion() {
            object[] results = this.Invoke("GetApplicationVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetApplicationVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetApplicationVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetApplicationVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationVersionAsync() {
            this.GetApplicationVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetApplicationVersionAsync(object userState) {
            if ((this.GetApplicationVersionOperationCompleted == null)) {
                this.GetApplicationVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationVersionOperationCompleted);
            }
            this.InvokeAsync("GetApplicationVersion", new object[0], this.GetApplicationVersionOperationCompleted, userState);
        }
        
        private void OnGetApplicationVersionOperationCompleted(object arg) {
            if ((this.GetApplicationVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationVersionCompleted(this, new GetApplicationVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemIniDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSystemIniDetails() {
            object[] results = this.Invoke("GetSystemIniDetails", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSystemIniDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSystemIniDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetSystemIniDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemIniDetailsAsync() {
            this.GetSystemIniDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetSystemIniDetailsAsync(object userState) {
            if ((this.GetSystemIniDetailsOperationCompleted == null)) {
                this.GetSystemIniDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemIniDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSystemIniDetails", new object[0], this.GetSystemIniDetailsOperationCompleted, userState);
        }
        
        private void OnGetSystemIniDetailsOperationCompleted(object arg) {
            if ((this.GetSystemIniDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemIniDetailsCompleted(this, new GetSystemIniDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccessDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetAccessDetail(string userName, string appName) {
            object[] results = this.Invoke("GetAccessDetail", new object[] {
                        userName,
                        appName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccessDetail(string userName, string appName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccessDetail", new object[] {
                        userName,
                        appName}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetAccessDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessDetailAsync(string userName, string appName) {
            this.GetAccessDetailAsync(userName, appName, null);
        }
        
        /// <remarks/>
        public void GetAccessDetailAsync(string userName, string appName, object userState) {
            if ((this.GetAccessDetailOperationCompleted == null)) {
                this.GetAccessDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccessDetail", new object[] {
                        userName,
                        appName}, this.GetAccessDetailOperationCompleted, userState);
        }
        
        private void OnGetAccessDetailOperationCompleted(object arg) {
            if ((this.GetAccessDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessDetailCompleted(this, new GetAccessDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCoverPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SearchCoverPage(int referenceType, string searchReference, string description, char unMatchOnly) {
            object[] results = this.Invoke("SearchCoverPage", new object[] {
                        referenceType,
                        searchReference,
                        description,
                        unMatchOnly});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchCoverPage(int referenceType, string searchReference, string description, char unMatchOnly, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchCoverPage", new object[] {
                        referenceType,
                        searchReference,
                        description,
                        unMatchOnly}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndSearchCoverPage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCoverPageAsync(int referenceType, string searchReference, string description, char unMatchOnly) {
            this.SearchCoverPageAsync(referenceType, searchReference, description, unMatchOnly, null);
        }
        
        /// <remarks/>
        public void SearchCoverPageAsync(int referenceType, string searchReference, string description, char unMatchOnly, object userState) {
            if ((this.SearchCoverPageOperationCompleted == null)) {
                this.SearchCoverPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCoverPageOperationCompleted);
            }
            this.InvokeAsync("SearchCoverPage", new object[] {
                        referenceType,
                        searchReference,
                        description,
                        unMatchOnly}, this.SearchCoverPageOperationCompleted, userState);
        }
        
        private void OnSearchCoverPageOperationCompleted(object arg) {
            if ((this.SearchCoverPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCoverPageCompleted(this, new SearchCoverPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceDescriptionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReferenceDescriptionDetails() {
            object[] results = this.Invoke("GetReferenceDescriptionDetails", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReferenceDescriptionDetails(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReferenceDescriptionDetails", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReferenceDescriptionDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceDescriptionDetailsAsync() {
            this.GetReferenceDescriptionDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetReferenceDescriptionDetailsAsync(object userState) {
            if ((this.GetReferenceDescriptionDetailsOperationCompleted == null)) {
                this.GetReferenceDescriptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceDescriptionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetReferenceDescriptionDetails", new object[0], this.GetReferenceDescriptionDetailsOperationCompleted, userState);
        }
        
        private void OnGetReferenceDescriptionDetailsOperationCompleted(object arg) {
            if ((this.GetReferenceDescriptionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceDescriptionDetailsCompleted(this, new GetReferenceDescriptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDocument(long imageNumber, int copy) {
            this.Invoke("DeleteDocument", new object[] {
                        imageNumber,
                        copy});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDocument(long imageNumber, int copy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDocument", new object[] {
                        imageNumber,
                        copy}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteDocument(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(long imageNumber, int copy) {
            this.DeleteDocumentAsync(imageNumber, copy, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(long imageNumber, int copy, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        imageNumber,
                        copy}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDocumentPool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDocumentPool(long imageNumber, int copy) {
            this.Invoke("UpdateDocumentPool", new object[] {
                        imageNumber,
                        copy});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDocumentPool(long imageNumber, int copy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDocumentPool", new object[] {
                        imageNumber,
                        copy}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateDocumentPool(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateDocumentPoolAsync(long imageNumber, int copy) {
            this.UpdateDocumentPoolAsync(imageNumber, copy, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentPoolAsync(long imageNumber, int copy, object userState) {
            if ((this.UpdateDocumentPoolOperationCompleted == null)) {
                this.UpdateDocumentPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentPoolOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentPool", new object[] {
                        imageNumber,
                        copy}, this.UpdateDocumentPoolOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentPoolOperationCompleted(object arg) {
            if ((this.UpdateDocumentPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IntroduceDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IntroduceDocument(int batchNumber, int docNumber, string receivedBy, int sourceFolder, int rootID, int poolNumber, string fileName, string documentDescr, ref System.DateTime dtDate, ref int imageNumber) {
            object[] results = this.Invoke("IntroduceDocument", new object[] {
                        batchNumber,
                        docNumber,
                        receivedBy,
                        sourceFolder,
                        rootID,
                        poolNumber,
                        fileName,
                        documentDescr,
                        dtDate,
                        imageNumber});
            dtDate = ((System.DateTime)(results[1]));
            imageNumber = ((int)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIntroduceDocument(int batchNumber, int docNumber, string receivedBy, int sourceFolder, int rootID, int poolNumber, string fileName, string documentDescr, System.DateTime dtDate, int imageNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IntroduceDocument", new object[] {
                        batchNumber,
                        docNumber,
                        receivedBy,
                        sourceFolder,
                        rootID,
                        poolNumber,
                        fileName,
                        documentDescr,
                        dtDate,
                        imageNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIntroduceDocument(System.IAsyncResult asyncResult, out System.DateTime dtDate, out int imageNumber) {
            object[] results = this.EndInvoke(asyncResult);
            dtDate = ((System.DateTime)(results[1]));
            imageNumber = ((int)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IntroduceDocumentAsync(int batchNumber, int docNumber, string receivedBy, int sourceFolder, int rootID, int poolNumber, string fileName, string documentDescr, System.DateTime dtDate, int imageNumber) {
            this.IntroduceDocumentAsync(batchNumber, docNumber, receivedBy, sourceFolder, rootID, poolNumber, fileName, documentDescr, dtDate, imageNumber, null);
        }
        
        /// <remarks/>
        public void IntroduceDocumentAsync(int batchNumber, int docNumber, string receivedBy, int sourceFolder, int rootID, int poolNumber, string fileName, string documentDescr, System.DateTime dtDate, int imageNumber, object userState) {
            if ((this.IntroduceDocumentOperationCompleted == null)) {
                this.IntroduceDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIntroduceDocumentOperationCompleted);
            }
            this.InvokeAsync("IntroduceDocument", new object[] {
                        batchNumber,
                        docNumber,
                        receivedBy,
                        sourceFolder,
                        rootID,
                        poolNumber,
                        fileName,
                        documentDescr,
                        dtDate,
                        imageNumber}, this.IntroduceDocumentOperationCompleted, userState);
        }
        
        private void OnIntroduceDocumentOperationCompleted(object arg) {
            if ((this.IntroduceDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IntroduceDocumentCompleted(this, new IntroduceDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveDocument(int poolID, long imageNumber, int copy, int newFolder, char UpdateTimeStamp) {
            object[] results = this.Invoke("MoveDocument", new object[] {
                        poolID,
                        imageNumber,
                        copy,
                        newFolder,
                        UpdateTimeStamp});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveDocument(int poolID, long imageNumber, int copy, int newFolder, char UpdateTimeStamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveDocument", new object[] {
                        poolID,
                        imageNumber,
                        copy,
                        newFolder,
                        UpdateTimeStamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMoveDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveDocumentAsync(int poolID, long imageNumber, int copy, int newFolder, char UpdateTimeStamp) {
            this.MoveDocumentAsync(poolID, imageNumber, copy, newFolder, UpdateTimeStamp, null);
        }
        
        /// <remarks/>
        public void MoveDocumentAsync(int poolID, long imageNumber, int copy, int newFolder, char UpdateTimeStamp, object userState) {
            if ((this.MoveDocumentOperationCompleted == null)) {
                this.MoveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveDocumentOperationCompleted);
            }
            this.InvokeAsync("MoveDocument", new object[] {
                        poolID,
                        imageNumber,
                        copy,
                        newFolder,
                        UpdateTimeStamp}, this.MoveDocumentOperationCompleted, userState);
        }
        
        private void OnMoveDocumentOperationCompleted(object arg) {
            if ((this.MoveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveDocumentCompleted(this, new MoveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserName() {
            object[] results = this.Invoke("GetUserName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameAsync() {
            this.GetUserNameAsync(null);
        }
        
        /// <remarks/>
        public void GetUserNameAsync(object userState) {
            if ((this.GetUserNameOperationCompleted == null)) {
                this.GetUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserName", new object[0], this.GetUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserNameOperationCompleted(object arg) {
            if ((this.GetUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPassword() {
            object[] results = this.Invoke("GetPassword", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPassword(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPassword", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordAsync() {
            this.GetPasswordAsync(null);
        }
        
        /// <remarks/>
        public void GetPasswordAsync(object userState) {
            if ((this.GetPasswordOperationCompleted == null)) {
                this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
            }
            this.InvokeAsync("GetPassword", new object[0], this.GetPasswordOperationCompleted, userState);
        }
        
        private void OnGetPasswordOperationCompleted(object arg) {
            if ((this.GetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExecutableFileName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExecutableFileName() {
            object[] results = this.Invoke("GetExecutableFileName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExecutableFileName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExecutableFileName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetExecutableFileName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExecutableFileNameAsync() {
            this.GetExecutableFileNameAsync(null);
        }
        
        /// <remarks/>
        public void GetExecutableFileNameAsync(object userState) {
            if ((this.GetExecutableFileNameOperationCompleted == null)) {
                this.GetExecutableFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExecutableFileNameOperationCompleted);
            }
            this.InvokeAsync("GetExecutableFileName", new object[0], this.GetExecutableFileNameOperationCompleted, userState);
        }
        
        private void OnGetExecutableFileNameOperationCompleted(object arg) {
            if ((this.GetExecutableFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExecutableFileNameCompleted(this, new GetExecutableFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallationLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInstallationLocation() {
            object[] results = this.Invoke("GetInstallationLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInstallationLocation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInstallationLocation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInstallationLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstallationLocationAsync() {
            this.GetInstallationLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetInstallationLocationAsync(object userState) {
            if ((this.GetInstallationLocationOperationCompleted == null)) {
                this.GetInstallationLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallationLocationOperationCompleted);
            }
            this.InvokeAsync("GetInstallationLocation", new object[0], this.GetInstallationLocationOperationCompleted, userState);
        }
        
        private void OnGetInstallationLocationOperationCompleted(object arg) {
            if ((this.GetInstallationLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallationLocationCompleted(this, new GetInstallationLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHttpInstallLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHttpInstallLocation() {
            object[] results = this.Invoke("GetHttpInstallLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHttpInstallLocation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHttpInstallLocation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetHttpInstallLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHttpInstallLocationAsync() {
            this.GetHttpInstallLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetHttpInstallLocationAsync(object userState) {
            if ((this.GetHttpInstallLocationOperationCompleted == null)) {
                this.GetHttpInstallLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHttpInstallLocationOperationCompleted);
            }
            this.InvokeAsync("GetHttpInstallLocation", new object[0], this.GetHttpInstallLocationOperationCompleted, userState);
        }
        
        private void OnGetHttpInstallLocationOperationCompleted(object arg) {
            if ((this.GetHttpInstallLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHttpInstallLocationCompleted(this, new GetHttpInstallLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHttpInstallFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHttpInstallFile() {
            object[] results = this.Invoke("GetHttpInstallFile", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHttpInstallFile(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHttpInstallFile", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetHttpInstallFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHttpInstallFileAsync() {
            this.GetHttpInstallFileAsync(null);
        }
        
        /// <remarks/>
        public void GetHttpInstallFileAsync(object userState) {
            if ((this.GetHttpInstallFileOperationCompleted == null)) {
                this.GetHttpInstallFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHttpInstallFileOperationCompleted);
            }
            this.InvokeAsync("GetHttpInstallFile", new object[0], this.GetHttpInstallFileOperationCompleted, userState);
        }
        
        private void OnGetHttpInstallFileOperationCompleted(object arg) {
            if ((this.GetHttpInstallFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHttpInstallFileCompleted(this, new GetHttpInstallFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void TestWebServiceCompletedEventHandler(object sender, TestWebServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentTypesCompletedEventHandler(object sender, GetDocumentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentDynamicConditionsCompletedEventHandler(object sender, GetDocumentDynamicConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDynamicConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDynamicConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentDescriptionCodesCompletedEventHandler(object sender, GetDocumentDescriptionCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDescriptionCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDescriptionCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDefaultValuesCompletedEventHandler(object sender, GetDefaultValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentImageFolderCompletedEventHandler(object sender, GetDocumentImageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentImageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentImageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetReferenceStructureCompletedEventHandler(object sender, GetReferenceStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetExtractParametersCompletedEventHandler(object sender, GetExtractParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExtractParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExtractParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetReferencesCompletedEventHandler(object sender, GetReferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentsCompletedEventHandler(object sender, GetDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetNextNumCompletedEventHandler(object sender, GetNextNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetReferenceTypeCompletedEventHandler(object sender, GetReferenceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ValidateReferenceCompletedEventHandler(object sender, ValidateReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetReferenceTypeDetailsCompletedEventHandler(object sender, GetReferenceTypeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceTypeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceTypeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentPathDetailsCompletedEventHandler(object sender, GetDocumentPathDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentPathDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentPathDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetScanFolderIDCompletedEventHandler(object sender, GetScanFolderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScanFolderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScanFolderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetApplicationVersionCompletedEventHandler(object sender, GetApplicationVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSystemIniDetailsCompletedEventHandler(object sender, GetSystemIniDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemIniDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemIniDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAccessDetailCompletedEventHandler(object sender, GetAccessDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SearchCoverPageCompletedEventHandler(object sender, SearchCoverPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCoverPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCoverPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetReferenceDescriptionDetailsCompletedEventHandler(object sender, GetReferenceDescriptionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceDescriptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceDescriptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateDocumentPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IntroduceDocumentCompletedEventHandler(object sender, IntroduceDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntroduceDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IntroduceDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dtDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int imageNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void MoveDocumentCompletedEventHandler(object sender, MoveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserNameCompletedEventHandler(object sender, GetUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetExecutableFileNameCompletedEventHandler(object sender, GetExecutableFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExecutableFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExecutableFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetInstallationLocationCompletedEventHandler(object sender, GetInstallationLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallationLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstallationLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetHttpInstallLocationCompletedEventHandler(object sender, GetHttpInstallLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHttpInstallLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHttpInstallLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetHttpInstallFileCompletedEventHandler(object sender, GetHttpInstallFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHttpInstallFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHttpInstallFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
